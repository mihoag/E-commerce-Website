package com.hcmus.admin.order;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.hcmus.admin.setting.SettingService;
import com.hcmus.common.entity.order.Order;
import com.hcmus.common.entity.setting.Setting;

import jakarta.servlet.http.HttpServletRequest;

@Controller
@RequestMapping("/orders")
public class OrderController {
	
	private String defaultRedirectURL = "redirect:/orders/page/1?sortField=orderTime&sortDir=desc";
	
	@Autowired
	private OrderService orderSerice;
	@Autowired private SettingService settingService;
	
	
	@GetMapping("/page/{pageNum}")
	public String listByPage(@PathVariable("pageNum") int pageNum, @Param("sortField") String sortField,
			@Param("sortDir") String sortDir, @Param("keyword") String keyword, Model model, HttpServletRequest request) {
		
		     if(keyword == null)
		     {
		    	 keyword = "";
		     }
		     
		     loadCurrencySetting(request);	
		     
		     Page<Order> pageOrder = orderSerice.listByPage(pageNum, sortField, sortDir, keyword);
		     
		     List<Order> lsOrders = pageOrder.getContent();
		     String reverseSortDir = sortDir.equals("asc") ? "desc" : "asc";
		     
		     model.addAttribute("orders", lsOrders);
		     model.addAttribute("sideBarFieldName", "orders");
			 model.addAttribute("currentPage", pageNum);
			 model.addAttribute("totalPages", pageOrder.getTotalPages());
			 model.addAttribute("sortField", sortField);
		     model.addAttribute("sortDir", sortDir);
			 model.addAttribute("reverseSortDir", reverseSortDir);
			 model.addAttribute("keyword", keyword);
		     model.addAttribute("totalElement", pageOrder.getTotalElements());
		     return "order/orders";	
	}
	

	
	
	@GetMapping("/**")
	public String listFirstPage(Model model)
	{
		return defaultRedirectURL;
	}
	
	private void loadCurrencySetting(HttpServletRequest request) {
		List<Setting> currencySettings = settingService.getCurrencySettings();
		
		for (Setting setting : currencySettings) {
			request.setAttribute(setting.getKey(), setting.getValue());
		}	
	}	
}
