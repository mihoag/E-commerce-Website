package com.hcmus.site.address;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.hcmus.common.entity.Address;
import com.hcmus.common.entity.Country;
import com.hcmus.common.entity.Customer;
import com.hcmus.common.exception.CustomerNotFoundException;
import com.hcmus.site.Utility;
import com.hcmus.site.customer.CustomerService;

import jakarta.servlet.http.HttpServletRequest;

@Controller
@RequestMapping("/address_book")
public class AddressController {

	@Autowired private AddressService addService;
	@Autowired private CustomerService customerService;
	
	@GetMapping("/new")
	public String addNew(Model model)
	{
	    List<Country> listCountries = customerService.listAllCountries();		
		model.addAttribute("listCountries", listCountries);
		model.addAttribute("address", new Address());
		return "address/address_form";
	}
	
	@PostMapping("/save")
	public String saveAddress(Address address, HttpServletRequest request, RedirectAttributes ra) throws CustomerNotFoundException {
		
		Customer customer = getCustomerByAuthenticatedRequest(request);
		
		address.setCustomer(customer);
		addService.save(address);
	
		ra.addFlashAttribute("message", "The address has been saved successfully.");
		
		return "redirect:/address_book";
	}
	
	@GetMapping("/**")
	public String home(Model model, HttpServletRequest request) throws CustomerNotFoundException
	{
		
		Customer customer = getCustomerByAuthenticatedRequest(request);
		
		List<Address> listAdress = addService.listAddressBook(customer);
		
		model.addAttribute("listAddress", listAdress);
		model.addAttribute("customer", customer);
		model.addAttribute("totalItems", listAdress.size());
		
		return "address/address";
	}
	
	
	public Customer getCustomerByAuthenticatedRequest(HttpServletRequest request) throws CustomerNotFoundException
	{
		String email = Utility.getEmailOfAuthenticatedCustomer(request);
		Customer customer = customerService.getCustomerByEmail(email);
		if(customer == null)
		{
			throw new CustomerNotFoundException("You must login to add this product to cart.");
		}
		return customer;
	}
}
