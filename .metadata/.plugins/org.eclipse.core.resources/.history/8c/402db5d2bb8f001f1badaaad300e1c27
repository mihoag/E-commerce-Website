package com.hcmus.site.socket;

import java.net.URI;
import java.util.Collections;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

import com.google.gson.Gson;
import com.hcmus.common.entity.chat.MessageDTO;
import com.hcmus.common.entity.chat.RoleChat;

public class ServerHandler extends TextWebSocketHandler  {
	 private static Set<WebSocketSession> sessions = Collections.newSetFromMap(new ConcurrentHashMap<>());    
	 private ServerClient serverClient;
	 Gson gson = new Gson();
	 public ServerHandler() {
	        // Initialize the client connection to Server 2
	        try {
	            URI uri = new URI("ws://localhost:8080/MyshopAdmin/server2/websocket"); // Change to your Server 2 URL
	            serverClient = new ServerClient(uri);
	            serverClient.connect();
	        } catch (Exception e) {
	            e.printStackTrace();
	        }
	    }

	  
	    @Override
	    public void afterConnectionEstablished(WebSocketSession session) throws Exception {
	        sessions.add(session);
	        System.out.println("Client connected: " + session.getId());
	    }
	     
	    @Override
	    public void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {
	     	MessageDTO dto = gson.fromJson(message.getPayload(), MessageDTO.class);
	        // Forward the message to Server 2
	     // receive from interface UI client 2
	    	if(dto.getRole_chat() == RoleChat.CUSTOMER)
	    	{
	    		serverClient.sendMessageToServer2(message.getPayload());
	    	}
	    	// receive from server1
	    	else if(dto.getRole_chat() == RoleChat.ADMIN)
	    	{
		        // Broadcast the message to all connected HTML clients
		        broadcastToClients(message.getPayload());	
	    	}
	        serverClient.sendMessageToServer2(message.getPayload());
	    }
}
