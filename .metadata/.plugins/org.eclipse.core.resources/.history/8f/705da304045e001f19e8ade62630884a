package com.hcmus.admin.customer;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import com.hcmus.common.entity.Customer;
import com.hcmus.common.exception.CustomerNotFoundException;

import jakarta.transaction.Transactional;

@Service
@Transactional
public class CustomerService {
	
   @Autowired
   private CustomerRepository repo;
   
   public static final int CUSTOMERS_PER_PAGE = 10;
	
   public Page<Customer> listByPage(int pageNum, String sortField, String sortDir, String keyword)
   {
	   Sort sort = Sort.by(sortField);
	   sort =  sortDir.equals("asc") ? sort.ascending() : sort.descending();
	   Pageable pageable = PageRequest.of(pageNum, CUSTOMERS_PER_PAGE, sort);
	   
	   return repo.findAll(keyword, pageable);
   }
   
   public void updateCustomerEnable(Integer id, boolean enabled)
   {
	   repo.updateEnabledStatus(id, enabled);
   }
   
   public void deleteCustomer(Integer id) throws CustomerNotFoundException
   {
	   try {
		  repo.deleteById(id);
	} catch (Exception e) {
		// TODO: handle exception
		throw new CustomerNotFoundException("Customer not found with id " + id);
	}   
   }
   
   public Customer getCustomerById(Integer id) throws CustomerNotFoundException
   {
	  try {
		return repo.findById(id).get();
	} catch (Exception e) {
		// TODO: handle exception
		throw new CustomerNotFoundException("Customer not found with id " + id);
	}
   }
   
   
}
