listChat = document.getElementById("listChat");
nameInput = document.getElementById("nameInput");
listMess = document.getElementById("listMess");
inputChat = document.getElementById("inputChat");
var btnSend = document.getElementById("btnSend")
var textVal = document.getElementById("textVal")
let socket;
var idCus;
var customerName;
var imageUrl;

document.addEventListener('DOMContentLoaded', function() {
	fetchGetDataCustomer('');
	handleEventForInput();
	connectSocket();
	addEventForButtonSend();
})

function addEventForButtonSend() {
	btnSend.addEventListener('click', function() {
		valueText = textVal.value;
		if (valueText != '') {
			addMessage(valueText)
		}
	})
}

function addMessage(messageContent) {
	var chatMessage = {
		content: messageContent,
		role_chat: 'ADMIN',
		customerId: parseInt(idCus),
		customerName: customerName,
		userId: null,
		time: convertDateNowToString()
	};

	console.log(JSON.stringify(chatMessage))

	$.ajax({
		url: "api/chat",  // Your Spring Boot POST API endpoint
		type: "POST",
		contentType: "application/json", // Sending data as JSON
		data: JSON.stringify(chatMessage),      // Convert JS object to JSON string
		success: function(response) {
			// Handle success response
			if (response == 'ok') {
				socket.send(JSON.stringify(chatMessage))
				addSendedToArea(chatMessage);
				textVal.value = ''
			} else {
				showToast('Error when save the message!')
			}
		},
		error: function(jqXHR, textStatus, errorThrown) {
			// Handle error response
			console.log("Error: " + textStatus + ": " + errorThrown);
			alert("Failed to save the message!");
		}
	});
}

function addMessageToArea(data) {
	const li = document.createElement('li');
	// Add the necessary classes to the <li>
	li.classList.add('d-flex', 'justify-content-b', 'mb-4');

	let htmlText = `<li class="d-flex justify-content-between mb-4">
            <img src=${imageUrl} alt="avatar"
              class="rounded-circle d-flex align-self-start me-3 shadow-1-strong" width="60">
            <div class="card  w-100">
              <div class="card-header d-flex justify-content-between p-3">
                <p class="fw-bold mb-0">${data.customerName}</p>
                <p class="text-muted small mb-0"><i class="far fa-clock"></i> ${data.time}</p>
              </div>
              <div class="card-body">
                <p class="mb-0">
                 ${data.content}
                </p>
              </div>
            </div>
          </li>`;
	li.innerHTML = htmlText;
	listMess.appendChild(li);
	scrollListMessageToBottom();
}

function addSendedToArea(data) {
	const li = document.createElement('li');
	// Add the necessary classes to the <li>
	li.classList.add('d-flex', 'justify-content-between', 'mb-4');

	let htmlText = `
            <div class="card w-100">
              <div class="card-header d-flex justify-content-between p-3">
                <p class="fw-bold mb-0">Admin</p>
                <p class="text-muted small mb-0"><i class="far fa-clock"></i> ${data.time}</p>
              </div>
              <div class="card-body">
                <p class="mb-0">
                     ${data.content}
                </p>
              </div>
            </div>
            <img src="https://openvldoostende.be/wp-content/uploads/2023/01/abstract-user-icon-1.jpg" alt="avatar"
              class="rounded-circle d-flex align-self-start ms-3 shadow-1-strong" width="60">
          `;
	li.innerHTML = htmlText;
	listMess.appendChild(li);
	scrollListMessageToBottom();
}

function showInputChat() {
	if (idCus) {
		inputChat.classList.add("d-flex");
		inputChat.classList.remove("hidden");
	}
}

function connectSocket() {
	socket = new WebSocket(ADMIN_SOCKET_CONNECTION_URI);

	socket.onopen = function() {
		console.log("Connected to Server WebSocket");
	};

	socket.onmessage = function(event) {
		data = JSON.parse(event.data);
		console.log(data.customerId === idCus);
		if (data.customerId == idCus) {
			addMessageToArea(data);
		}
	};

	socket.onclose = function() {
		console.log("WebSocket connection closed");
	};

	socket.onerror = function(error) {
		console.log("WebSocket error: " + error);
	};
}


function handleEventForInput() {
	nameInput.onchange = function() {
		// Get the value of the input
		const inputValue = nameInput.value;
		fetchGetDataCustomer(inputValue);
	};
}

// function convert date to string like YYYY-MM-DD HH:mm:ss
function convertDateNowToString() {
	const date = new Date();
	// Function to add leading zero for single-digit values
	const addLeadingZero = (num) => (num < 10 ? `0${num}` : num);

	const year = date.getFullYear();
	const month = addLeadingZero(date.getMonth() + 1); // Months are zero-based
	const day = addLeadingZero(date.getDate());

	const hours = addLeadingZero(date.getHours());
	const minutes = addLeadingZero(date.getMinutes());
	const seconds = addLeadingZero(date.getSeconds());

	const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
	return formattedDate;
}
function fetchGetDataCustomer(keyword) {
	url = "/MyshopAdmin/api/customer?keyword=" + keyword;
	fetch(url)
		.then(response =>
			response.json())
		.then(data => {
			renderListCustomer(data)
		})
		.catch(error => console.log('Error:', error));
}

function updateUnseenMessageCount(idCustomer) {
	url = "/MyshopAdmin/api/customer/update-message-count/" + idCustomer;
	fetch(url)
		.then(response =>
			response.json()
		)
		.then(data => {
			console.log(data);
		})
		.catch(error => console.log('Error:', error));
}

function resetUnseenMessageCount(idCustomer) {
	url = "/MyshopAdmin/api/customer/reset-message-count/" + idCustomer;
	fetch(url)
		.then(response =>
			response.json()
		)
		.then(data => {
			console.log(data);
		})
		.catch(error => console.log('Error:', error));
}

function renderListCustomer(data) {
	let listHTML = '';

	data.forEach(user => {
		listHTML += `
                <li class="p-2 border-bottom">
                    <a pid = ${user.id} pimage = ${user.image_url}  pName = ${user.first_name + ' ' + user.last_name} onclick="handleClickCustomer(this)" class="d-flex justify-content-between">
                        <div class="d-flex flex-row">
                            <img src=${user.image_url} alt="avatar"
                                class="rounded-circle d-flex align-self-center me-3 shadow-1-strong" width="50" height="50">
                            <div class="pt-1">
                                <p class="fw-bold mb-0">${user.first_name} ${user.last_name}</p>
                            </div>
                        </div>
                        <div class="pt-1">
                           <span class="badge bg-danger float-end"></span>
                        </div>
                    </a>
                </li>
            `;
	});

	// Add the generated HTML string to the UL element
	listChat.innerHTML = listHTML;
}
function handleClickCustomer(anchor) {
	idCus = anchor.getAttribute('pid');
	imageUrl = anchor.getAttribute('pimage');
	customerName = anchor.getAttribute('pName');
	showInputChat();
	fetchMessage(idCus);
}
function fetchMessage() {
	url = "/MyshopAdmin/api/chat/" + idCus;
	fetch(url)
		.then(response =>
			response.json())
		.then(data => {
			console.log(data);
			renderMessage(data)
		})
		.catch(error => console.log('Error:', error));
}
function renderMessage(data) {
	let htmlText = '';
	data.forEach(mess => {
		if (mess.role_chat == 'CUSTOMER') {
			htmlText += `<li class="d-flex justify-content-between mb-4">
            <img src="${imageUrl}" alt="avatar"
              class="rounded-circle d-flex align-self-start me-3 shadow-1-strong" width="50" height="50">
            <div class="card  w-100">
              <div class="card-header d-flex justify-content-between p-3">
                <p class="fw-bold mb-0">${mess.customerName}</p>
                <p class="text-muted small mb-0"><i class="far fa-clock"></i> ${mess.time}</p>
              </div>
              <div class="card-body">
                <p class="mb-0">
                 ${mess.content}
                </p>
              </div>
            </div>
          </li>`
		}
		else {
			htmlText += `<li class="d-flex justify-content-between mb-4">
            <div class="card w-100">
              <div class="card-header d-flex justify-content-between p-3">
                <p class="fw-bold mb-0">Admin</p>
                <p class="text-muted small mb-0"><i class="far fa-clock"></i> ${mess.time}</p>
              </div>
              <div class="card-body">
                <p class="mb-0">
                     ${mess.content}
                </p>
              </div>
            </div>
            <img src="https://openvldoostende.be/wp-content/uploads/2023/01/abstract-user-icon-1.jpg" alt="avatar"
              class="rounded-circle d-flex align-self-start ms-3 shadow-1-strong"  width="50" height="50">
          </li>
		 `
		};
	});
	listMess.innerHTML = htmlText;
}
function scrollListMessageToBottom() {
	listMess.scrollTop = listMess.scrollHeight;
}