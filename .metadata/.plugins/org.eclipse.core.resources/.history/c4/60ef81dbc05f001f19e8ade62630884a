package com.hcmus.site.customer;

import java.io.UnsupportedEncodingException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.hcmus.common.entity.Customer;
import com.hcmus.site.Utility;
import com.hcmus.site.setting.MailSettingBag;
import com.hcmus.site.setting.SettingService;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import jakarta.servlet.http.HttpServletRequest;

@Controller
public class ForgetPasswordController {

	
	@Autowired
	private CustomerService customerService;
	
	@Autowired
	private SettingService settingService;
	
	@GetMapping("/forgot_password")
	public String renderForgotPasswordForm()
	{
		return "customer/forgot_password_form";
	}
	
	@PostMapping("/forgot_password")
	public String postEmailForgotPassword( HttpServletRequest request,Model model)
	{
		String email = (String) request.getParameter("email");
		try {
			String token = customerService.updatePasswordToken(email);
			String link = Utility.getSiteURL(request) + "/reset_password?token=" + token;
			sendEmail(link, email);
			
			model.addAttribute("message", "We have sent a reset password link to your email."
					+ " Please check.");
		} catch (Exception e) {
			// TODO: handle exception
			model.addAttribute("error", e.getMessage());
		}

		return "customer/forgot_password_form";
	}
	
	@GetMapping("/reset_password")
	public String resetPassword(Model model, @RequestParam("token") String token)
	{
		try {
			Customer customer = customerService.getCustomerByToken(token);
		    model.addAttribute("token", token);
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		
	}
	
	private void sendEmail(String link, String email) 
			throws UnsupportedEncodingException, MessagingException {
		MailSettingBag emailSettings = settingService.getMailSettings();
		JavaMailSenderImpl mailSender = Utility.prepareMailSender(emailSettings);
		
		String toAddress = email;
		String subject = "Here's the link to reset your password";
		
		String content = "<p>Hello,</p>"
				+ "<p>You have requested to reset your password.</p>"
				+ "Click the link below to change your password:</p>"
				+ "<p><a href=\"" + link + "\">Change my password</a></p>"
				+ "<br>"
				+ "<p>Ignore this email if you do remember your password, "
				+ "or you have not made the request.</p>";
		
		MimeMessage message = mailSender.createMimeMessage();
		MimeMessageHelper helper = new MimeMessageHelper(message);
		
		helper.setFrom(emailSettings.getFromAddress(), emailSettings.getSenderName());
		helper.setTo(toAddress);
		helper.setSubject(subject);		
		
		helper.setText(content, true);
		mailSender.send(message);
	}
}
